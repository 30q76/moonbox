// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_message.proto

package moonbox.message.protobuf;

public interface BatchQueryInboundOrBuilder extends
    // @@protoc_insertion_point(interface_extends:protobuf.BatchQueryInbound)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string username = 1;</code>
   */
  java.lang.String getUsername();
  /**
   * <code>string username = 1;</code>
   */
  com.google.protobuf.ByteString
      getUsernameBytes();

  /**
   * <code>string password = 2;</code>
   */
  java.lang.String getPassword();
  /**
   * <code>string password = 2;</code>
   */
  com.google.protobuf.ByteString
      getPasswordBytes();

  /**
   * <code>string lang = 3;</code>
   */
  java.lang.String getLang();
  /**
   * <code>string lang = 3;</code>
   */
  com.google.protobuf.ByteString
      getLangBytes();

  /**
   * <pre>
   *Seq[String]
   * </pre>
   *
   * <code>repeated string sql = 4;</code>
   */
  java.util.List<java.lang.String>
      getSqlList();
  /**
   * <pre>
   *Seq[String]
   * </pre>
   *
   * <code>repeated string sql = 4;</code>
   */
  int getSqlCount();
  /**
   * <pre>
   *Seq[String]
   * </pre>
   *
   * <code>repeated string sql = 4;</code>
   */
  java.lang.String getSql(int index);
  /**
   * <pre>
   *Seq[String]
   * </pre>
   *
   * <code>repeated string sql = 4;</code>
   */
  com.google.protobuf.ByteString
      getSqlBytes(int index);

  /**
   * <pre>
   * or Map[String, String]
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 5;</code>
   */
  int getConfigCount();
  /**
   * <pre>
   * or Map[String, String]
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 5;</code>
   */
  boolean containsConfig(
      java.lang.String key);
  /**
   * Use {@link #getConfigMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getConfig();
  /**
   * <pre>
   * or Map[String, String]
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 5;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getConfigMap();
  /**
   * <pre>
   * or Map[String, String]
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 5;</code>
   */

  java.lang.String getConfigOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <pre>
   * or Map[String, String]
   * </pre>
   *
   * <code>map&lt;string, string&gt; config = 5;</code>
   */

  java.lang.String getConfigOrThrow(
      java.lang.String key);
}
